#N canvas 423 66 1226 828 12;
#X obj 676 607 bng 15 250 50 0 empty empty empty 17 7 0 10 #fcfcfc
#000000 #000000;
#X obj 702 444 tgl 15 0 empty empty empty 17 7 0 10 #fcfcfc #000000
#000000 0 1;
#X text 41 70 Aka Scr1ptAl1as;
#X text 43 109 Pd 0.52.2;
#X obj 43 155 reportissue;
#X obj 43 135 aboutexternal;
#X text 109 242 0;
#X text 38 242 Inlet(s);
#X text 39 443 Outlet(s);
#X text 43 49 Written By: Reg Finley;
#X text 41 30 ce_susbng v1.0;
#X text 41 88 2022/12/09 2:18 AM;
#X text 656 12 In this example the toggle state is checked every 500
miliseconds which is half of a second.;
#X text 222 11 [ce_susbng] is a small external that acts as a alternative
to using [del]. Unlike [del] ce_susbng does not hold up the cpu in
any way. ce_susbng uses a metronome to count the amount of milliseconds
that pass which is the reason for the first inlet being a float and
not a [bang< message this is done repeatedly.;
#X text 505 208 Click here first >>>;
#X text 529 606 Watch this [bng] >>>;
#X text 749 211 << by milliseconds suspend time;
#X text 468 482 Click here second >>>;
#X text 718 441 << Third and last click here when you are ready;
#X text 501 637 Recommended to use [t b] here. Simply using [bng] for
visualization;
#X msg 655 211 set_wait 500;
#X msg 701 467 set_state \$1;
#X msg 627 482 bang;
#X text 227 243 << by milliseconds suspend time;
#X msg 133 265 size 32;
#X msg 133 243 set_wait 500;
#X text 107 267 0;
#X text 107 289 0;
#X msg 133 289 set_state 0;
#X msg 229 289 set_state 1;
#X text 104 335 0;
#X msg 676 240 set_size 32;
#X msg 682 266 set_size 15;
#X text 109 504 1 - First inital bang = 0;
#X text 108 522 1 - Suspended state = 1;
#X text 109 540 1 - Done bang = 2;
#X floatatom 704 565 5 0 0 0 - - - 0;
#X msg 133 313 set_continuous 0;
#X msg 258 312 set_continuous 1;
#X text 106 316 0;
#X text 236 133 Using [set_continuous 1< will repeatedly send a 1 float
to the second outlet until the state changes. Otherwise the suspended
state will only be appear once.;
#X text 236 184 More about this in the example;
#X text 109 440 0 - bang - after first bang we are suspended.;
#X text 109 460 0 - bang - after second bang state has changed and
;
#X text 185 477 [ce_susbng] is done;
#X msg 711 390 set_continuous \$1;
#X obj 711 366 tgl 15 0 empty empty empty 17 7 0 10 #fcfcfc #000000
#000000 0 1;
#X obj 704 590 bng 15 250 50 0 empty empty empty 17 7 0 10 #fcfcfc
#000000 #000000;
#X text 726 588 <<< If continuous this will blink as 1 float;
#N canvas 319 200 403 300 \$0-loaddefaultsettings 0;
#X obj 85 60 loadbang;
#X msg 88 102 set_size 15;
#X obj 88 196 outlet;
#X msg 112 136 set_wait 500;
#X msg 142 170 set_continuous 0;
#X msg 150 207 use_timeout 0;
#X msg 149 237 set_timeout 10000;
#X connect 0 0 1 0;
#X connect 0 0 3 0;
#X connect 0 0 4 0;
#X connect 0 0 6 0;
#X connect 0 0 5 0;
#X connect 1 0 2 0;
#X connect 3 0 2 0;
#X connect 4 0 2 0;
#X connect 5 0 2 0;
#X connect 6 0 2 0;
#X restore 780 499 pd \$0-loaddefaultsettings;
#X text 783 521 You use these settings as a template otherwise default
creation settings are applied.;
#X text 659 51 All vanilla settings messages can be sent to the first
inlet except for the default [size< message. The object bounds will
not be set correctly. Use the size message described below.;
#X text 743 160 [ce_susbng 1] or [ce_susbng 2];
#X text 662 123 If more then one ce_susbng object is required create
the object in this manner. Note* this help file starts at 0;
#X msg 692 295 set_timeout 10000;
#X msg 704 341 use_timeout \$1;
#X obj 705 319 tgl 15 0 empty empty empty 17 7 0 10 #fcfcfc #000000
#000000 0 1;
#X text 503 516 Or click here second >>;
#X text 821 290 When milliseconds is reached state will be set back
to 0 This value is 10 seconds.;
#X msg 132 336 set_timeout 10000;
#X text 104 383 0;
#X msg 130 383 bang;
#X text 104 355 0;
#X msg 132 359 use_timeout 0;
#X msg 240 359 use_timeout 1;
#X obj 37 204 watchtutorial;
#N canvas 78 78 731 300 \$0-loadtutorial-link 0;
#X obj 48 162 outlet;
#X obj 47 84 loadbang;
#X msg 47 132 symbol https://www.youtube.com/channel/UCfmCjMoyl6K0pntwaSy0-kg
, f 65;
#X obj 46 109 bng 15 250 50 0 empty empty empty 17 7 0 10 #fcfcfc #000000
#000000;
#X connect 1 0 3 0;
#X connect 2 0 0 0;
#X connect 3 0 2 0;
#X restore 37 178 pd \$0-loadtutorial-link;
#X text 748 564 <<< Current suspend state;
#X text 229 98 Up or "released" state is suspended until the toggle
box is true or = 1;
#X obj 675 497 ce_susbng 0;
#X text 104 407 0;
#X text 134 408 All vanilla [bng] messages are accepted except [size<
;
#N canvas 723 120 846 733 \$0-example1 0;
#X obj 432 263 ce_susbng 99;
#X obj 475 347 sel 0 1 2 3, f 41;
#X obj 475 321 t f;
#N canvas 494 249 520 375 \$0-flashingbuttonsettings 0;
#X obj 40 60 loadbang;
#X obj 85 346 outlet;
#X msg 150 207 use_timeout 1;
#X msg 149 237 set_timeout 3000;
#X msg 142 170 set_continuous 1;
#X msg 88 102 set_size 50;
#X msg 114 136 set_wait 150;
#X msg 296 260 set_state \$1;
#X obj 295 240 tgl 15 0 empty empty empty 17 7 0 10 #fcfcfc #000000
#000000 0 1;
#X obj 296 138 r \$0-resetstate;
#X msg 296 163 0, f 4;
#X msg 306 210 1;
#X obj 293 291 r \$0-fromnewcolorupdate;
#X obj 308 188 inlet;
#X msg 148 277 color 10;
#X connect 0 0 5 0;
#X connect 0 0 6 0;
#X connect 0 0 4 0;
#X connect 0 0 3 0;
#X connect 0 0 2 0;
#X connect 0 0 14 0;
#X connect 2 0 1 0;
#X connect 3 0 1 0;
#X connect 4 0 1 0;
#X connect 5 0 1 0;
#X connect 6 0 1 0;
#X connect 7 0 1 0;
#X connect 8 0 7 0;
#X connect 9 0 10 0;
#X connect 10 0 8 0;
#X connect 11 0 8 0;
#X connect 12 0 1 0;
#X connect 13 0 11 0;
#X connect 14 0 1 0;
#X restore 432 235 pd \$0-flashingbuttonsettings;
#X obj 497 273 cnv 15 100 30 \$0-examplelabel1-send \$0-examplelabel1-recv
Ready 7 15 0 14 #e0e0e0 #000000 0;
#X obj 51 23 loadbang;
#X obj 51 50 \$0;
#X obj 53 74 s \$0-tmpid;
#X msg 475 455 bang;
#X msg 517 455 stop;
#X obj 475 506 bng 20 250 50 0 empty empty empty 17 7 0 10 #fcfcfc
#000000 #000000;
#N canvas 278 134 389 300 \$0-countoff 0;
#X obj 82 54 inlet;
#X obj 79 111 until;
#X obj 79 139 f;
#X obj 117 139 + 1;
#X obj 180 166 sel 0;
#X msg 81 87 1;
#X obj 185 138 r \$0-totalcount;
#X obj 117 165 mod 999;
#X floatatom 76 194 5 0 0 0 - - - 0;
#X msg 127 111 0;
#X obj 127 87 r \$0-resetcount;
#X obj 75 220 outlet;
#X obj 289 73 inlet;
#X obj 44 162 + 1;
#X connect 0 0 5 0;
#X connect 1 0 2 0;
#X connect 2 0 3 0;
#X connect 2 0 13 0;
#X connect 3 0 7 0;
#X connect 4 0 1 1;
#X connect 5 0 1 0;
#X connect 6 0 7 1;
#X connect 7 0 2 1;
#X connect 7 0 4 0;
#X connect 8 0 11 0;
#X connect 9 0 2 1;
#X connect 10 0 9 0;
#X connect 12 0 9 0;
#X connect 13 0 8 0;
#X restore 476 530 pd \$0-countoff;
#X floatatom 476 554 5 0 0 0 - - - 0;
#X obj 476 577 s \$0-atcount;
#X obj 525 90 r \$0-atcount;
#X obj 688 372 t b;
#X obj 617 372 t b;
#X obj 475 372 t b b;
#X obj 609 479 s \$0-totalcount;
#X obj 506 396 bng 15 250 50 0 empty empty empty 17 7 0 10 #fcfcfc
#000000 #000000;
#X obj 687 397 bng 15 250 50 0 empty empty timeout 17 7 0 10 #fcfcfc
#000000 #000000;
#X obj 687 418 s \$0-resetstate;
#X obj 527 137 t b b;
#X obj 545 208 s \$0-resetstate;
#X msg 608 451 200;
#X obj 527 186 bng 15 250 50 0 empty empty empty 17 7 0 10 #fcfcfc
#000000 #000000;
#X obj 529 164 del;
#X obj 526 113 sel 100;
#X text 41 484 Try count to 200 without a time out. Modify the metro
time>>;
#X obj 474 481 metro 200 1 msec;
#X text 231 28 This example will try to count to 200 but with out changing
the [sel 100] object and modifying the metro time this will not happen.
Try to do so.;
#X text 96 517 Did you have to change the [sel 100] object that is
connected to [r \$0-atcount] at the top of the patch?;
#X connect 0 1 2 0;
#X connect 1 0 17 0;
#X connect 1 2 16 0;
#X connect 1 3 15 0;
#X connect 2 0 1 0;
#X connect 3 0 0 0;
#X connect 5 0 6 0;
#X connect 6 0 7 0;
#X connect 8 0 29 0;
#X connect 9 0 11 1;
#X connect 9 0 29 0;
#X connect 10 0 11 0;
#X connect 11 0 12 0;
#X connect 12 0 13 0;
#X connect 14 0 27 0;
#X connect 15 0 9 0;
#X connect 15 0 20 0;
#X connect 16 0 9 0;
#X connect 17 0 8 0;
#X connect 17 1 19 0;
#X connect 19 0 24 0;
#X connect 20 0 21 0;
#X connect 22 0 26 0;
#X connect 22 1 3 0;
#X connect 24 0 18 0;
#X connect 25 0 9 0;
#X connect 25 0 23 0;
#X connect 26 0 25 0;
#X connect 27 0 22 0;
#X connect 29 0 10 0;
#X restore 193 661 pd \$0-example1;
#N canvas 255 73 846 739 \$0-example2 0;
#N canvas 0 22 450 300 (subpatch) 0;
#X array array99 20082 float 0;
#X coords 0 1 20081 -1 300 100 1 0 0;
#X restore 486 182 graph;
#X obj 487 348 soundfiler;
#X obj 80 182 ce_susbng 99;
#X floatatom 140 334 5 0 0 0 suspend\ state - - 0;
#X msg 80 253 0;
#X obj 283 432 s \$0-resetstate;
#X obj 82 306 s \$0-openandstartplaying;
#X obj 487 294 r \$0-openandstartplaying;
#X floatatom 489 375 8 0 0 0 - - - 0;
#X obj 140 359 sel 0 1 2 3, f 41;
#X obj 393 572 bng 15 250 50 0 empty empty timedout 17 7 0 10 #fcfcfc
#000000 #000000;
#X obj 140 532 t b b;
#X msg 140 601 bang;
#X msg 182 605 stop;
#X obj 183 659 dac~;
#X obj 322 673 s \$0-doneplaying;
#X msg 487 319 read -resize ../metrotick.wav array99;
#X obj 182 627 tabplay~ array99;
#N canvas -3 401 373 311 \$0-pickrandomplaycolor 0;
#X obj 123 70 inlet;
#X obj 123 97 t b b;
#X floatatom 123 161 5 0 0 0 - - - 0;
#X obj 123 186 outlet;
#X msg 183 101 12;
#X obj 123 137 random 999;
#X connect 0 0 1 0;
#X connect 1 0 5 0;
#X connect 1 1 4 0;
#X connect 2 0 3 0;
#X connect 4 0 5 1;
#X connect 5 0 2 0;
#X restore 209 480 pd \$0-pickrandomplaycolor;
#N canvas -662 297 336 352 \$0-counter 0;
#X obj 41 38 inlet;
#X obj 41 97 until;
#X obj 41 125 f;
#X obj 79 125 + 1;
#X obj 129 153 sel 0;
#X msg 43 73 1;
#X obj 121 119 + 1;
#X floatatom 41 176 5 0 0 0 - - - 0;
#X obj 79 151 mod 2;
#X obj 42 202 sel 0 1;
#X obj 43 227 t b;
#X obj 71 228 t b;
#X obj 55 259 outlet;
#X connect 0 0 5 0;
#X connect 1 0 2 0;
#X connect 2 0 3 0;
#X connect 2 0 7 0;
#X connect 3 0 8 0;
#X connect 4 0 1 1;
#X connect 5 0 1 0;
#X connect 6 0 8 1;
#X connect 7 0 9 0;
#X connect 8 0 2 1;
#X connect 8 0 4 0;
#X connect 9 0 10 0;
#X connect 9 1 11 0;
#X connect 10 0 12 0;
#X connect 11 0 12 0;
#X restore 210 456 pd \$0-counter;
#N canvas 1270 258 450 300 \$0-updatebangcolor 0;
#X obj 30 34 inlet;
#X obj 27 113 s \$0-fromnewcolorupdate;
#X msg 29 61 color \$1;
#X obj 31 84 t a b;
#X obj 71 141 outlet;
#X connect 0 0 2 0;
#X connect 2 0 3 0;
#X connect 3 0 1 0;
#X connect 3 1 4 0;
#X restore 209 506 pd \$0-updatebangcolor;
#X obj 79 281 t b b;
#X obj 139 258 t f;
#X msg 283 408 0;
#X obj 80 130 r \$0-doneplaying;
#N canvas 319 200 627 375 \$0-flashingbuttonsettings 0;
#X obj 45 14 loadbang;
#X obj 86 310 outlet;
#X msg 150 207 use_timeout 1;
#X msg 149 237 set_timeout 3000;
#X msg 142 170 set_continuous 1;
#X msg 88 102 set_size 50;
#X msg 114 136 set_wait 150;
#X msg 295 260 set_state \$1;
#X obj 295 240 tgl 15 0 empty empty empty 17 7 0 10 #fcfcfc #000000
#000000 0 1;
#X obj 295 144 r \$0-resetstate;
#X msg 295 169 0, f 4;
#X msg 305 216 1;
#X obj 295 291 r \$0-fromnewcolorupdate;
#X obj 280 68 inlet;
#X obj 160 71 bng 15 250 50 0 empty empty empty 17 7 0 10 #fcfcfc #000000
#000000;
#X obj 135 70 bng 15 250 50 0 empty empty empty 17 7 0 10 #fcfcfc #000000
#000000;
#X obj 116 72 bng 15 250 50 0 empty empty empty 17 7 0 10 #fcfcfc #000000
#000000;
#X obj 91 71 bng 15 250 50 0 empty empty empty 17 7 0 10 #fcfcfc #000000
#000000;
#X obj 66 77 bng 15 250 50 0 empty empty empty 17 7 0 10 #fcfcfc #000000
#000000;
#X obj 41 76 bng 15 250 50 0 empty empty empty 17 7 0 10 #fcfcfc #000000
#000000;
#X msg 148 277 color 10;
#X obj 50 45 t b b b b b b b;
#X connect 0 0 21 0;
#X connect 2 0 1 0;
#X connect 3 0 1 0;
#X connect 4 0 1 0;
#X connect 5 0 1 0;
#X connect 6 0 1 0;
#X connect 7 0 1 0;
#X connect 8 0 7 0;
#X connect 9 0 10 0;
#X connect 10 0 8 0;
#X connect 11 0 8 0;
#X connect 12 0 1 0;
#X connect 13 0 11 0;
#X connect 14 0 10 0;
#X connect 15 0 3 0;
#X connect 16 0 2 0;
#X connect 17 0 4 0;
#X connect 18 0 6 0;
#X connect 19 0 5 0;
#X connect 20 0 1 0;
#X connect 21 0 19 0;
#X connect 21 1 18 0;
#X connect 21 2 17 0;
#X connect 21 3 16 0;
#X connect 21 4 15 0;
#X connect 21 5 14 0;
#X connect 21 6 20 0;
#X restore 80 154 pd \$0-flashingbuttonsettings;
#X text 227 76 Then based on the suspend state of [ce_susbng] we can
update the canvas "text" symbol accordingly to represent what is currently
happening to the sample.;
#X obj 145 192 cnv 15 100 30 \$0-examplelabel1-send \$0-examplelabel1-recv
Ready 7 15 0 14 #e0e0e0 #000000 0;
#N canvas 745 204 450 300 \$0-update-playing 0;
#X obj 191 203 s;
#X obj 32 29 inlet;
#X msg 31 135 label \$1;
#X msg 31 109 symbol Playing;
#X msg 209 171 symbol \$1-examplelabel1-recv;
#X obj 209 142 r \$0-tmpid;
#X obj 32 57 del;
#X msg 193 99 color 16 22;
#X obj 32 84 t b b;
#X connect 1 0 6 0;
#X connect 2 0 0 0;
#X connect 3 0 2 0;
#X connect 4 0 0 1;
#X connect 5 0 4 0;
#X connect 6 0 8 0;
#X connect 7 0 0 0;
#X connect 8 0 3 0;
#X connect 8 1 7 0;
#X restore 211 530 pd \$0-update-playing;
#N canvas 840 321 450 300 \$0-update-ready 0;
#X obj 34 34 inlet;
#X obj 115 197 s;
#X msg 31 135 label \$1;
#X msg 31 109 symbol Ready;
#X msg 135 172 symbol \$1-examplelabel1-recv;
#X obj 135 143 r \$0-tmpid;
#X obj 35 58 del;
#X obj 32 84 t b b;
#X msg 130 109 color 10 22;
#X obj 216 144 s \$0-fromnewcolorupdate;
#X connect 0 0 6 0;
#X connect 2 0 1 0;
#X connect 3 0 2 0;
#X connect 4 0 1 1;
#X connect 5 0 4 0;
#X connect 6 0 7 0;
#X connect 7 0 3 0;
#X connect 7 1 8 0;
#X connect 8 0 1 0;
#X connect 8 0 9 0;
#X restore 314 409 pd \$0-update-ready;
#N canvas 759 204 450 300 \$0-update-timedout 0;
#X obj 35 95 inlet;
#X obj 118 236 s;
#X msg 34 174 label \$1;
#X msg 34 148 symbol Timed\ Out;
#X msg 191 179 symbol \$1-examplelabel1-recv;
#X obj 191 150 r \$0-tmpid;
#X obj 35 123 t b b;
#X msg 131 116 color 14 22;
#X connect 0 0 6 0;
#X connect 2 0 1 0;
#X connect 3 0 2 0;
#X connect 4 0 1 1;
#X connect 5 0 4 0;
#X connect 6 0 3 0;
#X connect 6 1 7 0;
#X connect 7 0 1 0;
#X restore 391 619 pd \$0-update-timedout;
#X obj 211 384 t b b;
#X obj 291 650 t b b;
#N canvas 208 208 416 300 \$0-update-started 0;
#X obj 34 30 inlet;
#X obj 115 197 s;
#X msg 31 135 label \$1;
#X obj 32 84 t b;
#X msg 31 109 symbol Started;
#X msg 135 172 symbol \$1-examplelabel1-recv;
#X obj 135 143 r \$0-tmpid;
#X obj 34 55 del;
#X connect 0 0 7 0;
#X connect 2 0 1 0;
#X connect 3 0 4 0;
#X connect 4 0 2 0;
#X connect 5 0 1 1;
#X connect 6 0 5 0;
#X connect 7 0 3 0;
#X restore 172 562 pd \$0-update-started;
#X obj 48 19 loadbang;
#X obj 47 45 \$0;
#X obj 53 74 s \$0-tmpid;
#X obj 282 384 t b b;
#X obj 391 594 del 10;
#X obj 393 384 t b;
#X text 227 17 Using [tabplay~] and an array this example patch will
play the loaded sample. While playing the colors of [ce_susbng] will
flash randomly until it's completion.;
#X connect 1 0 8 0;
#X connect 2 0 4 0;
#X connect 2 1 22 0;
#X connect 3 0 9 0;
#X connect 4 0 21 0;
#X connect 7 0 16 0;
#X connect 9 0 11 0;
#X connect 9 1 31 0;
#X connect 9 2 37 0;
#X connect 9 3 39 0;
#X connect 10 0 13 0;
#X connect 10 0 38 0;
#X connect 11 0 12 0;
#X connect 11 1 33 0;
#X connect 12 0 17 0;
#X connect 13 0 17 0;
#X connect 16 0 1 0;
#X connect 17 0 14 1;
#X connect 17 0 14 0;
#X connect 17 1 32 0;
#X connect 18 0 20 0;
#X connect 19 0 18 0;
#X connect 20 0 28 0;
#X connect 21 0 6 0;
#X connect 21 1 23 0;
#X connect 22 0 3 0;
#X connect 23 0 5 0;
#X connect 24 0 25 0;
#X connect 25 0 2 0;
#X connect 31 0 19 0;
#X connect 32 1 15 0;
#X connect 34 0 35 0;
#X connect 35 0 36 0;
#X connect 37 0 23 0;
#X connect 37 1 29 0;
#X connect 38 0 30 0;
#X connect 39 0 10 0;
#X restore 200 744 pd \$0-example2;
#X text 64 626 Count to 200 then finish suspend state w/o timing out
;
#X text 32 698 Change color of [ce_susbang] while a sound plays using
[soundfiler] to update a canvas with the suspend status.;
#X connect 1 0 21 0;
#X connect 20 0 69 0;
#X connect 21 0 69 0;
#X connect 22 0 69 0;
#X connect 31 0 69 0;
#X connect 32 0 69 0;
#X connect 36 0 47 0;
#X connect 45 0 69 0;
#X connect 46 0 45 0;
#X connect 49 0 69 0;
#X connect 54 0 69 0;
#X connect 55 0 69 0;
#X connect 56 0 55 0;
#X connect 66 0 65 0;
#X connect 69 0 0 0;
#X connect 69 1 36 0;
